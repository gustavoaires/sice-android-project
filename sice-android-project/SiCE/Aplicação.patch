Index: app/src/main/java/extensao/ufc/br/bases/RequestActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/bases/RequestActivity.java	(revision )
+++ app/src/main/java/extensao/ufc/br/bases/RequestActivity.java	(revision )
@@ -0,0 +1,101 @@
+package extensao.ufc.br.bases;
+
+import android.net.Network;
+import android.os.Handler;
+import android.support.v7.app.AppCompatActivity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.animation.Animation;
+import android.widget.RelativeLayout;
+
+import com.google.gson.Gson;
+
+import extensao.ufc.br.interfaces.AnswerProcessor;
+import extensao.ufc.br.interfaces.RequestReceiver;
+import extensao.ufc.br.interfaces.RequestSender;
+import extensao.ufc.br.network.NetworkController;
+import extensao.ufc.br.providers.AnimationProvider;
+import extensao.ufc.br.sice.R;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public abstract class RequestActivity extends AppCompatActivity{
+
+    protected NetworkController networkController;
+    protected RelativeLayout containerView;
+    protected RelativeLayout loadingView;
+    protected Gson gson;
+
+    Thread mThread;
+    Handler mHandler;
+
+    @Override
+    public void setContentView(int layoutResID) {
+        super.setContentView(R.layout.request_layout);
+
+        loadComponents();
+
+        LayoutInflater inf = (LayoutInflater) getSystemService(LAYOUT_INFLATER_SERVICE);
+        View view = inf.inflate(layoutResID, null);
+
+        containerView.addView(view, new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
+
+        loadVariables();
+    }
+
+    public void loadVariables(){
+        this.mHandler = new Handler();
+        this.networkController = new NetworkController(this);
+        this.gson = new Gson();
+    }
+
+    public void loadComponents(){
+        this.containerView = (RelativeLayout) findViewById(R.id.request_layout_container_view);
+        this.loadingView = (RelativeLayout) findViewById(R.id.request_layout_progress_container);
+    }
+
+    public void doRequest(final RequestSender sender, final RequestReceiver receiver){
+        startLoading();
+        mThread = new Thread(){
+            @Override
+            public void run() {
+                final Object result = sender.run();
+                mHandler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        receiver.run(result);
+                    }
+                });
+                mHandler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        stopLoading();
+                    }
+                });
+            }
+        };
+
+        mThread.start();
+    }
+
+    public void startLoading(){
+        AnimationProvider.doInAnimation(loadingView);
+    }
+
+    public void stopLoading(){
+        AnimationProvider.doOutAnimation(loadingView);
+    }
+
+    public void processRequest(AnswerProcessor processor){
+        processor.run();
+    }
+
+    public NetworkController getNetworkController(){
+        return networkController;
+    }
+
+
+
+}
Index: app/src/main/java/extensao/ufc/br/sice/EventsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/sice/EventsActivity.java	(revision )
+++ app/src/main/java/extensao/ufc/br/sice/EventsActivity.java	(revision )
@@ -0,0 +1,144 @@
+package extensao.ufc.br.sice;
+
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.media.Image;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.ImageView;
+import android.widget.ListView;
+import android.widget.RelativeLayout;
+
+import com.google.gson.reflect.TypeToken;
+
+import net.glxn.qrgen.android.QRCode;
+import net.glxn.qrgen.core.image.ImageType;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import extensao.ufc.br.adapters.EventListAdapter;
+import extensao.ufc.br.bases.RequestActivity;
+import extensao.ufc.br.interfaces.AnswerProcessor;
+import extensao.ufc.br.interfaces.RequestReceiver;
+import extensao.ufc.br.interfaces.RequestSender;
+import extensao.ufc.br.model.Event;
+import extensao.ufc.br.model.User;
+import extensao.ufc.br.network.Answer;
+import extensao.ufc.br.providers.AnimationProvider;
+import extensao.ufc.br.providers.UserProvider;
+
+public class EventsActivity extends RequestActivity {
+
+    ListView eventsListView;
+    ImageView qrCodeImageView;
+    RelativeLayout qrCodeContainer;
+
+    boolean showingImage = false;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_events);
+
+        loadComponents();
+        loadEvents();
+    }
+
+    @Override
+    public void loadComponents() {
+        super.loadComponents();
+        this.eventsListView = (ListView) findViewById(R.id.activity_events_list);
+        this.qrCodeContainer = (RelativeLayout) findViewById(R.id.activity_events_qrcode_container);
+        this.qrCodeImageView = (ImageView) findViewById(R.id.activity_events_qrcode_image);
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.events_menu, menu);
+        return super.onCreateOptionsMenu(menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        if(item.getItemId() == R.id.events_menu_generate_qr_code){
+            generateQRCode();
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    public void loadEvents(){
+        doRequest(new RequestSender() {
+                      @Override
+                      public Object run() {
+                          return getNetworkController().loadEvents();
+                      }
+                  },
+                new RequestReceiver() {
+                    @Override
+                    public void run(Object object) {
+                        processRequest(new AnswerProcessor(object) {
+                            @Override
+                            public void onInternalError(Answer answer) {
+
+                            }
+
+                            @Override
+                            public void onError(Answer answer) {
+
+                            }
+
+                            @Override
+                            public void onSuccess(Answer answer) {
+                                List<Event> events = gson.fromJson(answer.getObject().toString(), new TypeToken<List<Event>>(){}.getType());
+
+                                eventsListView.setAdapter(new EventListAdapter(EventsActivity.this, events));
+
+                                eventsListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+                                    @Override
+                                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                                        if(!showingImage){
+                                            Intent intent = new Intent(EventsActivity.this, SubEventsActivity.class);
+                                            intent.putExtra("id_event", String.valueOf(id));
+
+                                            startActivity(intent);
+                                        }
+                                    }
+                                });
+                            }
+
+                            @Override
+                            public void onRequestFailure() {
+
+                            }
+                        });
+                    }
+                });
+    }
+
+    public void generateQRCode(){
+        User user = UserProvider.getUser(EventsActivity.this);
+
+        Bitmap mBitmap = BitmapFactory.decodeFile(QRCode.from(String.valueOf(user.getId())).to(ImageType.PNG).withSize(500, 500).file().getAbsolutePath());
+
+        qrCodeImageView.setImageBitmap(mBitmap);
+        showingImage = true;
+
+        AnimationProvider.doInAnimation(qrCodeContainer);
+    }
+
+    @Override
+    public void onBackPressed() {
+        if(showingImage){
+            showingImage = false;
+            AnimationProvider.doOutAnimation(qrCodeContainer);
+        }else {
+            super.onBackPressed();
+        }
+    }
+}
Index: app/src/main/res/layout/activity_events.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_events.xml	(revision )
+++ app/src/main/res/layout/activity_events.xml	(revision )
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
+    android:layout_height="match_parent" android:paddingLeft="3dp"
+    android:paddingRight="3dp"
+    android:paddingTop="3dp"
+    android:paddingBottom="3dp"
+    tools:context="extensao.ufc.br.sice.EventsActivity"
+    android:background="@color/eventBackground"
+    >
+
+    <ListView
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:id="@+id/activity_events_list"
+        android:dividerHeight="8dp"
+        android:divider="@android:color/transparent"
+        >
+        
+    </ListView>
+
+    <RelativeLayout
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:id="@+id/activity_events_qrcode_container"
+        android:background="@color/whiteBackground"
+        android:visibility="invisible"
+        >
+
+        <ImageView
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:adjustViewBounds="true"
+            android:id="@+id/activity_events_qrcode_image"
+            android:layout_centerInParent="true"
+            />
+
+
+    </RelativeLayout>
+
+</RelativeLayout>
Index: app/src/main/java/extensao/ufc/br/interfaces/RequestSender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/interfaces/RequestSender.java	(revision )
+++ app/src/main/java/extensao/ufc/br/interfaces/RequestSender.java	(revision )
@@ -0,0 +1,10 @@
+package extensao.ufc.br.interfaces;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public interface RequestSender{
+
+    public abstract Object run();
+
+}
Index: app/src/main/java/extensao/ufc/br/providers/SettingsProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/providers/SettingsProvider.java	(revision )
+++ app/src/main/java/extensao/ufc/br/providers/SettingsProvider.java	(revision )
@@ -0,0 +1,21 @@
+package extensao.ufc.br.providers;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class SettingsProvider {
+
+    public static final String PREFERENCES = "sice";
+
+    public static SharedPreferences getPreferences(Context context){
+        return context.getSharedPreferences(PREFERENCES, Context.MODE_PRIVATE);
+    }
+
+    public static SharedPreferences.Editor getEditor(Context context){
+        return SettingsProvider.getPreferences(context).edit();
+    }
+
+}
Index: app/src/main/java/extensao/ufc/br/providers/UserProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/providers/UserProvider.java	(revision )
+++ app/src/main/java/extensao/ufc/br/providers/UserProvider.java	(revision )
@@ -0,0 +1,27 @@
+package extensao.ufc.br.providers;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+
+import com.google.gson.Gson;
+
+import extensao.ufc.br.model.User;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class UserProvider {
+
+    public static void save(User user, Context context){
+        SharedPreferences.Editor edit = SettingsProvider.getEditor(context);
+        edit.putString("user", new Gson().toJson(user));
+
+        edit.commit();
+    }
+
+    public static User getUser(Context context){
+        SharedPreferences preferences = SettingsProvider.getPreferences(context);
+        return new Gson().fromJson(preferences.getString("user", null), User.class);
+    }
+
+}
Index: app/src/main/java/extensao/ufc/br/interfaces/RequestReceiver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/interfaces/RequestReceiver.java	(revision )
+++ app/src/main/java/extensao/ufc/br/interfaces/RequestReceiver.java	(revision )
@@ -0,0 +1,8 @@
+package extensao.ufc.br.interfaces;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public abstract class RequestReceiver{
+    public abstract void run(Object object);
+}
Index: app/src/main/java/extensao/ufc/br/adapters/EventListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/adapters/EventListAdapter.java	(revision )
+++ app/src/main/java/extensao/ufc/br/adapters/EventListAdapter.java	(revision )
@@ -0,0 +1,68 @@
+package extensao.ufc.br.adapters;
+
+import android.content.Context;
+import android.text.Layout;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.TextView;
+
+import java.util.List;
+
+import extensao.ufc.br.model.Event;
+import extensao.ufc.br.providers.Formatters;
+import extensao.ufc.br.sice.R;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class EventListAdapter extends BaseAdapter{
+
+    Context context;
+    List<Event> events;
+    public EventListAdapter(Context context, List<Event> events){
+        this.context = context;
+        this.events = events;
+    }
+
+    @Override
+    public int getCount() {
+        return events.size();
+    }
+
+    @Override
+    public Object getItem(int position) {
+        return events.get(position);
+    }
+
+    @Override
+    public long getItemId(int position) {
+        return events.get(position).getId();
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+
+        View view = null;
+        view = inflater.inflate(R.layout.event_list_item, null);
+
+        TextView title, subtitle, description, begin, end;
+        title = (TextView) view.findViewById(R.id.event_list_item_title);
+        subtitle = (TextView) view.findViewById(R.id.event_list_item_subtitle);
+        description = (TextView) view.findViewById(R.id.event_list_item_description);
+        begin = (TextView) view.findViewById(R.id.event_list_item_begin);
+        end = (TextView) view.findViewById(R.id.event_list_item_end);
+
+        Event event = events.get(position);
+
+        title.setText(event.getTitle());
+        subtitle.setText(event.getSubtitle());
+        description.setText(event.getDescription());
+        begin.setText(Formatters.getFormattedString(event.getBegin()));
+        end.setText(Formatters.getFormattedString(event.getEnd()));
+
+        return view;
+    }
+}
Index: app/src/main/res/layout/request_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/request_layout.xml	(revision )
+++ app/src/main/res/layout/request_layout.xml	(revision )
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <RelativeLayout
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:id="@+id/request_layout_container_view"
+        >
+
+
+    </RelativeLayout>
+
+    <RelativeLayout
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:id="@+id/request_layout_progress_container"
+        android:background="@color/colorPrimarySoft"
+        android:visibility="invisible"
+        >
+
+        <ProgressBar
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerInParent="true"
+            android:id="@+id/request_layout_progress"
+            />
+
+    </RelativeLayout>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_login.xml	(revision )
+++ app/src/main/res/layout/activity_login.xml	(revision )
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
+    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:paddingBottom="@dimen/activity_vertical_margin" tools:context=".LoginActivity"
+    android:orientation="vertical">
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/email"
+        />
+
+    <EditText
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:id="@+id/activity_login_email"
+        />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/password"
+        />
+
+    <EditText
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:id="@+id/activity_login_password"
+        android:inputType="textPassword"
+        />
+
+    <Button
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="right"
+        android:text="@string/entrar"
+        android:onClick="loginClick"
+        />
+
+</LinearLayout>
Index: app/src/main/res/drawable/card_drawable.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/card_drawable.xml	(revision )
+++ app/src/main/res/drawable/card_drawable.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape xmlns:android="http://schemas.android.com/apk/res/android">
+            <solid android:color="@color/whiteBackground"></solid>
+            <corners android:radius="5dp"></corners>
+        </shape>
+    </item>
+</layer-list>
\ No newline at end of file
Index: app/src/main/java/extensao/ufc/br/network/Answer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/network/Answer.java	(revision )
+++ app/src/main/java/extensao/ufc/br/network/Answer.java	(revision )
@@ -0,0 +1,39 @@
+package extensao.ufc.br.network;
+
+import java.util.Objects;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class Answer {
+
+    public enum Cod{SUCCESS, ERROR, INTERNAL_ERROR};
+
+    private Cod result;
+    private String message;
+    private Object object;
+
+    public Cod getResult() {
+        return result;
+    }
+
+    public void setResult(Cod result) {
+        this.result = result;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public void setMessage(String message) {
+        this.message = message;
+    }
+
+    public Object getObject() {
+        return object;
+    }
+
+    public void setObject(Object object) {
+        this.object = object;
+    }
+}
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /home/alan/Android/Sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: app/src/main/res/layout/activity_sub_events.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_sub_events.xml	(revision )
+++ app/src/main/res/layout/activity_sub_events.xml	(revision )
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
+    android:layout_height="match_parent" android:paddingLeft="3dp"
+    android:paddingRight="3dp"
+    android:paddingTop="3dp"
+    android:paddingBottom="3dp"
+    tools:context="extensao.ufc.br.sice.SubEventsActivity"
+    android:background="@color/eventBackground"
+    >
+
+    <ListView
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:id="@+id/activity_subevents_list"
+        android:dividerHeight="8dp"
+        android:divider="@android:color/transparent"
+        >
+
+    </ListView>
+
+</RelativeLayout>
Index: app/src/main/res/values-v21/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-v21/styles.xml	(revision )
+++ app/src/main/res/values-v21/styles.xml	(revision )
@@ -0,0 +1,8 @@
+<resources>>
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
+        <item name="android:statusBarColor">@android:color/transparent</item>
+    </style>
+</resources>
Index: app/app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app.iml	(revision )
+++ app/app.iml	(revision )
@@ -0,0 +1,109 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id=":app" external.linked.project.path="$MODULE_DIR$" external.root.project.path="$MODULE_DIR$/.." external.system.id="GRADLE" external.system.module.group="SiCE" external.system.module.version="unspecified" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android-gradle" name="Android-Gradle">
+      <configuration>
+        <option name="GRADLE_PROJECT_PATH" value=":app" />
+      </configuration>
+    </facet>
+    <facet type="android" name="Android">
+      <configuration>
+        <option name="SELECTED_BUILD_VARIANT" value="debug" />
+        <option name="SELECTED_TEST_ARTIFACT" value="_android_test_" />
+        <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
+        <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
+        <option name="ASSEMBLE_TEST_TASK_NAME" value="assembleDebugAndroidTest" />
+        <option name="COMPILE_JAVA_TEST_TASK_NAME" value="compileDebugAndroidTestSources" />
+        <afterSyncTasks>
+          <task>generateDebugAndroidTestSources</task>
+          <task>generateDebugSources</task>
+        </afterSyncTasks>
+        <option name="ALLOW_USER_CONFIGURATION" value="false" />
+        <option name="MANIFEST_FILE_RELATIVE_PATH" value="/src/main/AndroidManifest.xml" />
+        <option name="RES_FOLDER_RELATIVE_PATH" value="/src/main/res" />
+        <option name="RES_FOLDERS_RELATIVE_PATH" value="file://$MODULE_DIR$/src/main/res" />
+        <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/src/main/assets" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/build/intermediates/classes/debug" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/classes/androidTest/debug" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/debug" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/r/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/aidl/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/rs/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/androidTest/debug" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/androidTest/debug" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/aidl" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/jni" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/aidl" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/jni" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/jni" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/coverage-instrumented-classes" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dependency-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dex-cache" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/appcompat-v7/23.1.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/design/23.1.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/recyclerview-v7/23.1.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.android.support/support-v4/23.1.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/com.github.johnkil.android-appmsg/appmsg/1.2.0/jars" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jacoco" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/javaResources" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/libs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/lint" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/ndk" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/pre-dexed" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/proguard" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
+      <excludeFolder url="file://$MODULE_DIR$/build/outputs" />
+      <excludeFolder url="file://$MODULE_DIR$/build/tmp" />
+    </content>
+    <orderEntry type="jdk" jdkName="Android API 23 Platform" jdkType="Android SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" exported="" name="gson-2.2.4" level="project" />
+    <orderEntry type="library" exported="" name="core-3.2.1" level="project" />
+    <orderEntry type="library" exported="" name="http-request-6.0" level="project" />
+    <orderEntry type="library" exported="" name="core-2.0" level="project" />
+    <orderEntry type="library" exported="" name="recyclerview-v7-23.1.0" level="project" />
+    <orderEntry type="library" exported="" name="android-integration-3.2.1" level="project" />
+    <orderEntry type="library" exported="" name="appmsg-1.2.0" level="project" />
+    <orderEntry type="library" exported="" name="android-2.0" level="project" />
+    <orderEntry type="library" exported="" name="support-v4-23.1.0" level="project" />
+    <orderEntry type="library" exported="" name="design-23.1.0" level="project" />
+    <orderEntry type="library" exported="" name="appcompat-v7-23.1.0" level="project" />
+    <orderEntry type="library" exported="" name="support-annotations-23.1.0" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: app/src/main/java/extensao/ufc/br/sice/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/sice/LoginActivity.java	(revision )
+++ app/src/main/java/extensao/ufc/br/sice/LoginActivity.java	(revision )
@@ -0,0 +1,110 @@
+package extensao.ufc.br.sice;
+
+import android.content.Intent;
+import android.os.Message;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.EditText;
+
+import extensao.ufc.br.bases.RequestActivity;
+import extensao.ufc.br.interfaces.AnswerProcessor;
+import extensao.ufc.br.interfaces.RequestReceiver;
+import extensao.ufc.br.interfaces.RequestSender;
+import extensao.ufc.br.model.User;
+import extensao.ufc.br.network.Answer;
+import extensao.ufc.br.providers.MessagesProvider;
+import extensao.ufc.br.providers.UserProvider;
+
+public class LoginActivity extends RequestActivity {
+
+    private static final int SHOW_EVENTS = 1;
+    EditText loginEditText;
+    EditText passwordEditText;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_login);
+
+        loadComponents();
+        testUserAlreadySaved();
+    }
+
+    public void testUserAlreadySaved(){
+        User user = UserProvider.getUser(this);
+        if(user != null){
+            doLogin(user);
+        }
+    }
+
+    @Override
+    public void loadComponents() {
+        super.loadComponents();
+
+        this.loginEditText = (EditText) findViewById(R.id.activity_login_email);
+        this.passwordEditText = (EditText) findViewById(R.id.activity_login_password);
+    }
+
+    public void loginClick(View view){
+        String email = loginEditText.getText().toString();
+        String password = passwordEditText.getText().toString();
+
+        User user = new User(email, password);
+        doLogin(user);
+    }
+
+    public void doLogin(final User user){
+        doRequest(new RequestSender() {
+                      @Override
+                      public Object run() {
+                          Answer answer = getNetworkController().login(user);
+                          return answer;
+                      }
+                  },
+                new RequestReceiver() {
+                    @Override
+                    public void run(Object object) {
+                        processRequest(new AnswerProcessor(object) {
+                            @Override
+                            public void onInternalError(Answer answer) {
+
+                            }
+
+                            @Override
+                            public void onError(Answer answer) {
+                                MessagesProvider.showErrorMessage(LoginActivity.this, getString(R.string.email_password_incorrect));
+                            }
+
+                            @Override
+                            public void onSuccess(Answer answer) {
+                                User user = gson.fromJson(answer.getObject().toString(), User.class);
+                                UserProvider.save(user, LoginActivity.this);
+
+                                Intent intent = new Intent(LoginActivity.this, EventsActivity.class);
+                                startActivityForResult(intent, SHOW_EVENTS);
+                            }
+
+                            @Override
+                            public void onRequestFailure() {
+
+                            }
+                        });
+                    }
+                });
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+
+        if(requestCode == SHOW_EVENTS){
+            if(data != null && data.getBooleanExtra("logout", false)){
+
+            }else{
+                finish();
+            }
+        }
+    }
+}
Index: app/src/main/res/layout/event_list_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/event_list_item.xml	(revision )
+++ app/src/main/res/layout/event_list_item.xml	(revision )
@@ -0,0 +1,105 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    >
+
+    <LinearLayout
+        android:background="@drawable/card_drawable"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:orientation="vertical"
+        android:padding="5dp"
+        android:layout_margin="8dp"
+        android:elevation="5dp"
+        >
+
+        <TextView
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/event_list_item_title"
+            android:text="Sample Text"
+            style="@style/titleStyle"
+            android:paddingLeft="5dp"
+            />
+
+        <TextView
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/event_list_item_subtitle"
+            android:text="Sample Text"
+            style="@style/subtitleStyle"
+            android:paddingLeft="5dp"
+            />
+
+        <TextView
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/event_list_item_description"
+            android:text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
+            android:layout_gravity="center_vertical|left"
+            android:gravity="left"
+            style="@style/descriptionStyle"
+            android:padding="8dp"
+            />
+
+        <RelativeLayout
+            android:layout_width="fill_parent"
+            android:layout_height="wrap_content">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:layout_alignParentLeft="true"
+                android:paddingLeft="5dp"
+                >
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="@string/begin"
+                    style="@style/dateTitleStyle"
+                    />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:id="@+id/event_list_item_begin"
+                    android:text="Sample Text"
+                    style="@style/dateStyle"
+                    />
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:layout_alignParentRight="true"
+                android:paddingLeft="5dp"
+                >
+
+                <TextView
+                    android:layout_gravity="right"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="@string/end"
+                    style="@style/dateTitleStyle"
+                    />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:id="@+id/event_list_item_end"
+                    android:text="Sample Text"
+                    style="@style/dateStyle"
+                    />
+
+            </LinearLayout>
+
+        </RelativeLayout>
+
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/test/java/extensao/ufc/br/sice/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/extensao/ufc/br/sice/ExampleUnitTest.java	(revision )
+++ app/src/test/java/extensao/ufc/br/sice/ExampleUnitTest.java	(revision )
@@ -0,0 +1,15 @@
+package extensao.ufc.br.sice;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,34 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion "23.0.2"
+
+    defaultConfig {
+        applicationId "extensao.ufc.br.sice"
+        minSdkVersion 15
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    testCompile 'junit:junit:4.12'
+    compile 'com.android.support:appcompat-v7:23.1.0'
+    compile 'com.google.code.gson:gson:2.2.+'
+    compile 'com.github.johnkil.android-appmsg:appmsg:1.2.0'
+    compile 'com.github.kevinsawicki:http-request:6.0'
+    compile 'com.android.support:design:23.1.0'
+    compile 'com.google.zxing:core:3.2.1'
+    compile 'com.google.zxing:android-integration:3.2.1'
+    compile 'net.glxn.qrgen:android:2.0'
+    compile 'com.google.zxing:core:3.2.1'
+}
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,11 @@
+<resources>
+    <string name="app_name">SiCE</string>
+    <string name="email">Email:</string>
+    <string name="password">Password:</string>
+    <string name="entrar">Entrar</string>
+    <string name="email_password_incorrect">Email or password incorrect</string>
+    <string name="begin">Begin</string>
+    <string name="end">End</string>
+    <string name="title_activity_sub_events">SubEventsActivity</string>
+    <string name="generate_code">Generate Code</string>
+</resources>
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#2975ab</color>
+    <color name="colorPrimaryDark">#004680</color>
+    <color name="colorPrimarySoft">#ffffff</color>
+    <color name="eventBackground">#dedede</color>
+    <color name="colorAccent">#FF4081</color>
+    <color name="gray">#888888</color>
+    <color name="darkGray">#444444</color>
+    <color name="whiteBackground">#eeeeee</color>
+    <color name="borders">#aaaaaa</color>
+</resources>
Index: app/src/main/java/extensao/ufc/br/interfaces/AnswerProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/interfaces/AnswerProcessor.java	(revision )
+++ app/src/main/java/extensao/ufc/br/interfaces/AnswerProcessor.java	(revision )
@@ -0,0 +1,42 @@
+package extensao.ufc.br.interfaces;
+
+import extensao.ufc.br.network.Answer;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public abstract class AnswerProcessor {
+    Object answer;
+
+    public AnswerProcessor(Object answer){
+        this.answer = answer;
+    }
+
+    public void run() {
+        if(answer == null){
+            onRequestFailure();
+        }else{
+            Answer answer = (Answer) this.answer;
+            switch(answer.getResult()){
+
+                case SUCCESS:
+                    onSuccess(answer);
+                    break;
+
+                case ERROR:
+                    onError(answer);
+                    break;
+
+                case INTERNAL_ERROR:
+                    onInternalError(answer);
+                    break;
+
+            }
+        }
+    }
+
+    public abstract void onInternalError(Answer answer);
+    public abstract void onError(Answer answer);
+    public abstract void onSuccess(Answer answer);
+    public abstract void onRequestFailure();
+}
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="extensao.ufc.br.sice" >
+
+    <uses-permission android:name="android.permission.INTERNET" />
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme" >
+        <activity android:name=".LoginActivity" >
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity android:name=".EventsActivity" >
+        </activity>
+        <activity
+            android:name=".SubEventsActivity"
+            android:label="@string/title_activity_sub_events"
+            android:theme="@style/AppTheme" >
+        </activity>
+    </application>
+
+</manifest>
Index: app/src/main/java/extensao/ufc/br/network/NetworkController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/network/NetworkController.java	(revision )
+++ app/src/main/java/extensao/ufc/br/network/NetworkController.java	(revision )
@@ -0,0 +1,63 @@
+package extensao.ufc.br.network;
+
+import android.content.Context;
+import com.github.kevinsawicki.http.HttpRequest;
+import com.google.gson.Gson;
+import java.util.HashMap;
+
+import extensao.ufc.br.model.Event;
+import extensao.ufc.br.model.User;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class NetworkController {
+
+    private static final String SERVICE_BASE = "http://192.168.3.103:8080/sicewebservice/";
+    private static final String LOGIN = SERVICE_BASE+"user/login";
+    private static final String LOAD_EVENTS = SERVICE_BASE+"event/load";
+    private static final String LOAD_SUBEVENTS = SERVICE_BASE+"subevent/load";
+    private static final String PARTICIPATE = SERVICE_BASE+"/participation/insert";
+    private Gson gson;
+
+    Context context;
+    public NetworkController(Context context){
+        this.context = context;
+        this.gson = new Gson();
+    }
+
+    public Answer doPostRequest(String url, HashMap<String, String> parameters){
+        HttpRequest request = HttpRequest.post(url).form(parameters);
+
+        Answer answer = gson.fromJson(request.body(), Answer.class);
+        answer.setObject(gson.toJson(answer.getObject()));
+
+        return answer;
+    }
+
+    public Answer login(User user){
+        HashMap<String, String> parameters = new HashMap<>();
+        parameters.put("email", user.getEmail());
+        parameters.put("password", user.getPassword());
+
+        return doPostRequest(LOGIN, parameters);
+    }
+
+    public Answer loadEvents(){
+        return doPostRequest(LOAD_EVENTS, new HashMap<String, String>());
+    }
+    public Answer loadSubEvents(String eventId){
+        HashMap<String, String> parameters = new HashMap<String, String>();
+        parameters.put("id_event", String.valueOf(eventId));
+
+        return doPostRequest(LOAD_SUBEVENTS, parameters);
+    }
+
+    public Answer validatePresence(long subEventId, long userId) {
+        HashMap<String, String> parameters = new HashMap<String, String>();
+        parameters.put("idUser", String.valueOf(userId));
+        parameters.put("idSubEvent", String.valueOf(subEventId));
+
+        return doPostRequest(PARTICIPATE, parameters);
+    }
+}
Index: app/src/main/java/extensao/ufc/br/providers/AnimationProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/providers/AnimationProvider.java	(revision )
+++ app/src/main/java/extensao/ufc/br/providers/AnimationProvider.java	(revision )
@@ -0,0 +1,52 @@
+package extensao.ufc.br.providers;
+
+import android.animation.ObjectAnimator;
+import android.view.View;
+import android.view.animation.AlphaAnimation;
+import android.view.animation.Animation;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class AnimationProvider {
+
+    private static final int DEFAULT_DURATION = 500;
+
+    public static Animation doInAnimation(final View view){
+        String a = "";
+        Animation anim = new AlphaAnimation(0, 1);
+        view.setVisibility(View.VISIBLE);
+        anim.setDuration(DEFAULT_DURATION);
+        anim.setFillAfter(true);
+
+        view.startAnimation(anim);
+
+        return anim;
+    }
+
+    public static Animation doOutAnimation(final View view){
+        Animation anim = new AlphaAnimation(1, 0);
+        anim.setAnimationListener(new Animation.AnimationListener() {
+            @Override
+            public void onAnimationStart(Animation animation) {
+
+            }
+
+            @Override
+            public void onAnimationEnd(Animation animation) {
+                view.setVisibility(View.INVISIBLE);
+            }
+
+            @Override
+            public void onAnimationRepeat(Animation animation) {
+
+            }
+        });
+        anim.setDuration(DEFAULT_DURATION);
+        anim.setFillAfter(true);
+
+        view.startAnimation(anim);
+        return anim;
+    }
+
+}
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="fab_margin">16dp</dimen>
+</resources>
Index: app/src/main/java/extensao/ufc/br/model/SubEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/model/SubEvent.java	(revision )
+++ app/src/main/java/extensao/ufc/br/model/SubEvent.java	(revision )
@@ -0,0 +1,7 @@
+package extensao.ufc.br.model;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class SubEvent extends Event {
+}
Index: app/src/main/java/extensao/ufc/br/providers/Formatters.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/providers/Formatters.java	(revision )
+++ app/src/main/java/extensao/ufc/br/providers/Formatters.java	(revision )
@@ -0,0 +1,21 @@
+package extensao.ufc.br.providers;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class Formatters {
+
+    public static String getFormattedString(Date date) {
+        if(date == null)
+            return null;
+        try{
+            return new SimpleDateFormat("HH:mm dd/MM/yyyy").format(date);
+        }catch (Exception e){
+            return null;
+        }
+    }
+
+}
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,42 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+    <style name="titleStyle">
+        <item name="android:textColor">@color/colorPrimaryDark</item>
+        <item name="android:textAppearance">@android:style/TextAppearance.Large</item>
+    </style>
+
+    <style name="subtitleStyle">
+        <item name="android:textColor">@color/colorPrimary</item>
+        <item name="android:textAppearance">@android:style/TextAppearance.Medium</item>
+    </style>
+
+    <style name="descriptionStyle">
+        <item name="android:textColor">@color/gray</item>
+        <item name="android:textSize">15dp</item>
+    </style>
+
+    <style name="dateTitleStyle">
+        <item name="android:textColor">@color/darkGray</item>
+        <item name="android:textAppearance">@android:style/TextAppearance.Small</item>
+    </style>
+
+    <style name="dateStyle">
+        <item name="android:textColor">@color/colorPrimary</item>
+        <item name="android:textAppearance">@android:style/TextAppearance.Small</item>
+    </style>
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+
+</resources>
Index: app/src/main/res/menu/events_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/events_menu.xml	(revision )
+++ app/src/main/res/menu/events_menu.xml	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:id="@+id/events_menu_generate_qr_code"
+        android:title="@string/generate_code"
+        >
+
+
+
+    </item>
+</menu>
\ No newline at end of file
Index: app/src/main/java/extensao/ufc/br/providers/MessagesProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/providers/MessagesProvider.java	(revision )
+++ app/src/main/java/extensao/ufc/br/providers/MessagesProvider.java	(revision )
@@ -0,0 +1,19 @@
+package extensao.ufc.br.providers;
+
+import android.app.Activity;
+import android.content.Context;
+
+import com.devspark.appmsg.AppMsg;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class MessagesProvider {
+    public static void showErrorMessage(Activity context, String message){
+        AppMsg.makeText(context, message, AppMsg.STYLE_ALERT).show();
+    }
+
+    public static void showSuccessMessage(Activity context, String message){
+        AppMsg.makeText(context, message, AppMsg.STYLE_CONFIRM).show();
+    }
+}
Index: app/src/main/java/extensao/ufc/br/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/model/User.java	(revision )
+++ app/src/main/java/extensao/ufc/br/model/User.java	(revision )
@@ -0,0 +1,55 @@
+package extensao.ufc.br.model;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class User {
+
+    public enum Levels{PARTICIPANT, ADMIN};
+
+    private long id;
+    private String email;
+    private String password;
+    private Levels level;
+
+    public User(){
+
+    }
+
+    public long getId() {
+        return id;
+    }
+
+    public void setId(long id) {
+        this.id = id;
+    }
+
+    public User(String email, String password){
+        this.email = email;
+        this.password = password;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public void setEmail(String email) {
+        this.email = email;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setPassword(String password) {
+        this.password = password;
+    }
+
+    public Levels getLevel() {
+        return level;
+    }
+
+    public void setLevel(Levels level) {
+        this.level = level;
+    }
+}
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: app/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-w820dp/dimens.xml	(revision )
+++ app/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: app/src/androidTest/java/extensao/ufc/br/sice/ApplicationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/extensao/ufc/br/sice/ApplicationTest.java	(revision )
+++ app/src/androidTest/java/extensao/ufc/br/sice/ApplicationTest.java	(revision )
@@ -0,0 +1,13 @@
+package extensao.ufc.br.sice;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/extensao/ufc/br/model/Event.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/model/Event.java	(revision )
+++ app/src/main/java/extensao/ufc/br/model/Event.java	(revision )
@@ -0,0 +1,63 @@
+package extensao.ufc.br.model;
+
+import java.util.Date;
+
+/**
+ * Created by alan on 11/22/15.
+ */
+public class Event {
+    private long id;
+    private String title;
+    private String subtitle;
+    private String description;
+    private Date begin;
+    private Date end;
+
+    public long getId() {
+        return id;
+    }
+
+    public void setId(long id) {
+        this.id = id;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    public String getSubtitle() {
+        return subtitle;
+    }
+
+    public void setSubtitle(String subtitle) {
+        this.subtitle = subtitle;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public Date getBegin() {
+        return begin;
+    }
+
+    public void setBegin(Date begin) {
+        this.begin = begin;
+    }
+
+    public Date getEnd() {
+        return end;
+    }
+
+    public void setEnd(Date end) {
+        this.end = end;
+    }
+}
Index: app/src/main/java/extensao/ufc/br/sice/SubEventsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/extensao/ufc/br/sice/SubEventsActivity.java	(revision )
+++ app/src/main/java/extensao/ufc/br/sice/SubEventsActivity.java	(revision )
@@ -0,0 +1,146 @@
+package extensao.ufc.br.sice;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.Message;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.ListView;
+
+import com.google.gson.reflect.TypeToken;
+import com.google.zxing.integration.android.IntentIntegrator;
+import com.google.zxing.integration.android.IntentResult;
+
+import java.util.List;
+
+import extensao.ufc.br.adapters.EventListAdapter;
+import extensao.ufc.br.bases.RequestActivity;
+import extensao.ufc.br.interfaces.AnswerProcessor;
+import extensao.ufc.br.interfaces.RequestReceiver;
+import extensao.ufc.br.interfaces.RequestSender;
+import extensao.ufc.br.model.Event;
+import extensao.ufc.br.model.SubEvent;
+import extensao.ufc.br.model.User;
+import extensao.ufc.br.network.Answer;
+import extensao.ufc.br.providers.MessagesProvider;
+
+public class SubEventsActivity extends RequestActivity {
+
+    ListView subEventsListView;
+    String eventId;
+    long subEventId;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_sub_events);
+
+        this.eventId = getIntent().getStringExtra("id_event");
+        loadComponents();
+        loadEvents();
+    }
+
+    @Override
+    public void loadComponents() {
+        super.loadComponents();
+        this.subEventsListView = (ListView) findViewById(R.id.activity_subevents_list);
+    }
+
+    public void loadEvents(){
+        doRequest(new RequestSender() {
+                      @Override
+                      public Object run() {
+                          return getNetworkController().loadSubEvents(eventId);
+                      }
+                  },
+                new RequestReceiver() {
+                    @Override
+                    public void run(Object object) {
+                        processRequest(new AnswerProcessor(object) {
+                            @Override
+                            public void onInternalError(Answer answer) {
+
+                            }
+
+                            @Override
+                            public void onError(Answer answer) {
+
+                            }
+
+                            @Override
+                            public void onSuccess(Answer answer) {
+                                List<Event> events = gson.fromJson(answer.getObject().toString(), new TypeToken<List<SubEvent>>() {
+                                }.getType());
+
+                                subEventsListView.setAdapter(new EventListAdapter(SubEventsActivity.this, events));
+
+                                subEventsListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+                                    @Override
+                                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+
+                                    subEventId = id;
+                                        scanQRCode();
+
+                                    }
+                                });
+                            }
+
+                            @Override
+                            public void onRequestFailure() {
+
+                            }
+                        });
+                    }
+                });
+    }
+
+    public void scanQRCode(){
+        IntentIntegrator intent = new IntentIntegrator(SubEventsActivity.this);
+        intent.initiateScan();
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+
+        IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);
+        if(result != null){
+            final long userId = Long.parseLong(result.getContents());
+
+            doRequest(new RequestSender() {
+                @Override
+                public Object run() {
+                    return getNetworkController().validatePresence(subEventId, userId);
+                }
+            }, new RequestReceiver() {
+                @Override
+                public void run(Object object) {
+                    processRequest(new AnswerProcessor(object) {
+                        @Override
+                        public void onInternalError(Answer answer) {
+
+                        }
+
+                        @Override
+                        public void onError(Answer answer) {
+
+                        }
+
+                        @Override
+                        public void onSuccess(Answer answer) {
+                            User user = gson.fromJson(answer.getObject().toString(), User.class);
+                            MessagesProvider.showSuccessMessage(SubEventsActivity.this, user.getEmail()+" inserted successfully!");
+                        }
+
+                        @Override
+                        public void onRequestFailure() {
+
+                        }
+                    });
+                }
+            });
+        }
+    }
+}
